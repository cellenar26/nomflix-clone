{"version":3,"sources":["Components/GlobalStyles.js","Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","reset","HtmlHeader","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","tvApi","get","id","append_to_response","term","query","encodeURIComponent","moviesApi","Container","div","Title","span","Grid","Section","title","children","require","default","Loader","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","HomePresenter","nowPlaying","upcoming","popular","error","loading","length","map","movie","poster_path","original_title","vote_average","release_date","substring","HomeContainer","useState","setNowPlaying","setUpcoming","setPopular","setError","setLoading","useEffect","a","getNowPlaying","data","results","getUpcoming","getPopular","getDatas","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","setMovieResults","setTvResults","setSearchTerm","searchByTerm","getMovieResults","getTvResults","console","log","event","preventDefault","target","TVPresenter","topRated","airingToday","TVContainer","setTopRated","setAiringToday","getTopRated","getAiringToday","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","undefined","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","history","useHistory","useLocation","useParams","setResult","includes","getMovieOrTvDetail","request","isNaN","Number","getParsedId","push","AppRouter","path","exact","component","Home","TV","Search","Detail","from","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72736b0d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset}\n    a {\n        text-decoration : none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20,1);\n        color: white;\n        padding-top: 50px;\n    }\n`\n\nexport default GlobalStyles;","import { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst HtmlHeader = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n\n`\n\nconst List = styled.ul`\n    display: flex;\n`\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid\n                ${props => (props.current? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Header = ({location: {pathname}}) => {\n  return (\n    <HtmlHeader>\n      <List>\n        <Item current={pathname === \"/\"}>\n          <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === \"/tv\"}>\n          <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === \"/search\"}>\n          <SLink to=\"/search\">Search</SLink>\n        </Item>\n      </List>\n    </HtmlHeader>\n  );\n};\n\nexport default withRouter( Header);\n","import axios from \"axios\"\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"17f63f0af9afb30432061e00d90f277a\",\n        language:\"en-US\"\n    }\n})\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id) => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport default api\n\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default Section;\n","const { default: styled } = require('styled-components');\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`\n\nconst Loader = () => {\n    return (\n        <Container>\n            <span role=\"img\" aria-label=\"Loading\">⏰</span>\n        </Container>\n    )\n}\n\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => {\n  return (\n    <Container>\n      <Text color={color} text={text} />\n    </Container>\n  );\n};\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => {\n  return (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n      <Container>\n        <ImageContainer>\n          <Image bgUrl={imageUrl} />\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐️\n            </span>{\" \"}\n            {rating}/10\n          </Rating>\n        </ImageContainer>\n        <Title>{title}</Title>\n        <Year>{year}</Year>\n      </Container>\n    </Link>\n  );\n};\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => {\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              // imageUrl={movie.poster_path}\n              imageUrl={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>\n  );\n};\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\"\n\nexport default HomeContainer;","import { moviesApi } from \"api\";\nimport { useEffect, useState } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nconst HomeContainer = ({props}) => {\n  const [nowPlaying, setNowPlaying] = useState(null);\n  const [upcoming, setUpcoming] = useState(null);\n  const [popular, setPopular] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getDatas = async () => {\n      try {\n        const {\n          data: { results: getNowPlaying },\n        } = await moviesApi.nowPlaying();\n        const {\n          data: { results: getUpcoming },\n        } = await moviesApi.upcoming();\n        const {\n          data: { results: getPopular },\n        } = await moviesApi.popular();\n        \n        setNowPlaying(getNowPlaying);\n        setUpcoming(getUpcoming);\n        setPopular(getPopular);\n      } catch {\n        setError(\"Can't find movie info.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    getDatas();\n  }, []);\n\n  return (\n    <>\n      <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />\n    </>\n  );\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, loading, handleSubmit, error, updateTerm }) => {\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input placeholder=\"Search Movies or TV Shows\" value={searchTerm} onChange={updateTerm} />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\"\n\nexport default SearchContainer","import { moviesApi, tvApi } from \"api\";\nimport { useEffect, useState } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nconst SearchContainer = () => {\n  const [movieResults, setMovieResults] = useState(null);\n  const [tvResults, setTvResults] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n    const handleSubmit = (event) => {\n      event.preventDefault();\n      if (searchTerm !== \"\") {\n        searchByTerm();\n      }\n    };\n\n  const searchByTerm = async () => {\n    setLoading(true);\n    try {\n      const {\n        data: { results: getMovieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: getTvResults },\n      } = await tvApi.search(searchTerm);\n      setMovieResults(getMovieResults)\n      setTvResults(getTvResults)\n      console.log(getTvResults);\n\n    } catch {\n        setError(\"Can't find results\")\n    } finally {\n        setLoading(false)\n    }\n  };\n//   useEffect(() => {\n//     searchByTerm();\n//   }, []);\n  const updateTerm = (event) => {\n    const {target : {value}} = event\n    setSearchTerm(value)\n    \n  }\n\n  return (\n    <SearchPresenter\n      movieResults={movieResults}\n      tvResults={tvResults}\n      searchTerm={searchTerm}\n      loading={loading}\n      error={error}\n      handleSubmit={handleSubmit}\n      updateTerm={updateTerm}\n    />\n  );\n};\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => {\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>\n  );\n};\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\"\n\nexport default TVContainer;","import { tvApi } from \"api\";\nimport { useEffect, useState } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nconst TVContainer = () => {\n  const [topRated, setTopRated] = useState(null);\n  const [popular, setPopular] = useState(null);\n  const [airingToday, setAiringToday] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n \n    const getDatas = async () => {\n      try {\n        const {\n          data: { results: getTopRated },\n        } = await tvApi.topRated();\n        const {\n          data: { results: getPopular },\n        } = await tvApi.popular();\n        const {\n          data: { results: getAiringToday },\n        } = await tvApi.airingToday();\n        setTopRated(getTopRated);\n        setPopular(getPopular);\n        setAiringToday(getAiringToday);\n      } catch {\n          setError(\"Can't find TV info.\")\n      } finally {\n          setLoading(false)\n      }\n    };\n    getDatas();\n  }, []);\n\n  return (\n    <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} loading={loading} error={error} />\n  );\n};\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => {\n  if (result === null || result === undefined) {\n    console.log(\"result가 비었어요!\");\n    return \"\";\n  }\n\n  console.log(error);\n  return loading ? (\n    <Loader />\n  ) : (\n    // https://image.tmdb.org/t/p/original/gzppdxEJ6fofhtLzSVSUJZEVxvq.jpg\n    <Container>\n      <Backdrop\n        bgImage={result && result.backdrop_path && `https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result && result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : \"\"\n            //   require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>{result.original_title || result.original_name}</Title>\n          <ItemContainer>\n            <Item>{result.release_date || result.first_air_date}</Item>\n            <Divider>•</Divider>\n            <Item>{result.runtime || result.episode_run_time[0]} min</Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\"\n\nexport default DetailContainer","import { moviesApi, tvApi } from \"api\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nconst DetailContainer = () => {\n  const history = useHistory(); // {location: {pathname: \"/movie/848278\"}}\n  const location = useLocation(); // {pathname: \"/movie/848278\"}\n  const params = useParams(); // {id: '848278'}\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isMovie, setIsMovie] = useState(location.pathname.includes(\"/movie/\"));\n\n  // console.log(history, location, params);\n\n  const getMovieOrTvDetail = async (id) => {\n    let result = null;\n    try {\n      if (isMovie) {\n        const request = await moviesApi.movieDetail(id);\n        result = request.data\n        console.log(result);\n        setResult(result)\n      }\n      else {\n        const request = await tvApi.showDetail(id)\n        result = request.data\n        console.log(result);\n        setResult(result)\n      }\n    } catch {\n      console.log('error occur!');\n      setError(\"Can't find anything.\")\n    } finally {\n      setLoading(false)\n      // setResult(result)\n    }\n  };\n  \n\n  useEffect(() => {\n    if (isNaN(Number(params.id)) === false) {\n      // number 인 경우\n      const getParsedId = Number(params.id);\n      getMovieOrTvDetail(getParsedId);\n    } else {\n      // number 가 아님. 즉 잘못된 url 요청\n      // alert('올바르지 않은 요청')\n      // 리다이렉트, 어디로?\n      history.push(\"/\");\n      console.log(\"now steal alive\"); // history.push(\"/\") 로 인해 실행되지 않음\n    }\n  }, []);\n\n  return <DetailPresenter result={result} error={error} loading={loading} />;\n};\nexport default DetailContainer;\n","import { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Detail from \"Routes/Detail\"\nimport Header from \"./Header\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"https://cellenar26.github.io/popcorn-clone/\" exact component={Home}></Route>\n        <Route path=\"https://cellenar26.github.io/popcorn-clone/tv\" component={TV}></Route>\n        <Route path=\"https://cellenar26.github.io/popcorn-clone/search\" component={Search}></Route>\n        <Route path=\"/movie/:id\" component={Detail}></Route>\n        <Route path=\"/show/:id\" component={Detail}></Route>\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React from \"react\";\nimport GlobalStyles from './GlobalStyles';\nimport globalStyles from './GlobalStyles';\nimport Header from './Header';\nimport AppRouter from \"./Router\";\n\nconst App = () => {\n  return (\n    <>\n      <AppRouter />\n      <GlobalStyles /> \n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport api from \"api\"\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}